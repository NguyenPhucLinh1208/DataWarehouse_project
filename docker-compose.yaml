x-airflow-common:
# đây là cấu hình chung của airflow, thực tế cần mount Airflow vào để đồng bộ dags, lên lịch, web.
  &airflow-common
  image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.10.3}  
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflowmeta@host.docker.internal:5432/airflow
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
    AIRFLOW__SCHEDULER__RUN_DURATION: 30
    PYTHONPATH: /usr/local/lib/python3.12/site-packages  # Thiết lập PYTHONPATH
    
  volumes:
    - ${DATAWAREHOUSE_PROJ_DIR:-.}/Airflow:/opt/airflow # mount thế này mới đúng, vì cấu hình mặc định trong container của airflow chứa dags trong này
    - ${DATAWAREHOUSE_PROJ_DIR:-.}/ScrapingPackage:/opt/ScrapingPackage
    - ${DATAWAREHOUSE_PROJ_DIR:-.}/Tasks:/opt/Tasks
    - ${DATAWAREHOUSE_PROJ_DIR:-.}/Kafka:/opt/Kafka
    - ${DATAWAREHOUSE_PROJ_DIR:-.}/SQL:/opt/SQL
    - shared-libs:/usr/local/lib/python3.12/site-packages
  user: "${DATAWAREHOUSE_UID:-50000}:0"

services:

# container sẽ làm việc chính
  data_warehouse:
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - shared-libs:/usr/local/lib/python3.12/site-packages
    networks:
      - airflow-net
      - kafka-net

# cấu hình các dịch vụ airflow.
  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    networks:
      - airflow-net
      - kafka-net

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    networks:
      - airflow-net
      - kafka-net

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -c
      - |
        exec /entrypoint airflow db init
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_MIGRATE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflowDWH}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflowDWH}
    user: "0:0"
    depends_on: 
      - data_warehouse  # để lấy đúng danh sách thư viện, cần container này chạy đầu tiên
    networks:
      - airflow-net

# dịch vụ liên quan đến web scraping
  chrome:
    image: selenium/standalone-chrome:latest
    shm_size: '2gb'
    environment:
      - DBUS_SESSION_BUS_ADDRESS=/dev/null
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4444/wd/hub/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    ports:
      - "4444:4444"
    restart: always
    networks:
      - airflow-net

# cấu hình kafka.
  zookeeper:
    image: confluentinc/cp-zookeeper:7.1.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
    networks:
      - kafka-net
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_txn_logs:/var/lib/zookeeper/log
    depends_on:
      - "data_warehouse"


  kafka0:
    image: confluentinc/cp-kafka
    ports:
    - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka0:9093,EXTERNAL://host.docker.internal:9092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_LOG_RETENTION_HOURS: 8                 # Giữ dữ liệu 8 giờ (thời gian giao dịch)
      KAFKA_LOG_RETENTION_BYTES: 500000000          # Giới hạn dung lượng
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    depends_on:
      - "zookeeper"
    networks:
      - kafka-net
    volumes:
      - kafka_data:/var/lib/kafka/data

  schema-registry:
    image: confluentinc/cp-schema-registry
    ports:
    - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka0:9093"
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_HOST_NAME: "schema-registry"
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: "1"
    depends_on:
      - "kafka0"
    networks:
      - kafka-net
      
networks:
  kafka-net:
  airflow-net:

volumes:
  shared-libs: # Volume dùng chung cho các thư viện
  kafka_data:
  zookeeper_data:
  zookeeper_txn_logs:
